---
openapi: 3.1.0

info:
  title: Prediction Guard API
  description: "This is the Prediction Guard API, designed to provide various language-related services and checks."
  version: "1.2"

servers:
  - url: https://api.predictionguard.com
 
paths:
  "":
    get:
      summary: Check API Health
      description: A simple endpoint to check if the Prediction Guard API is healthy.
      responses:
        '200':
          description: Successful response with API health status.
          content:
            text/plain:
              schema:
                type: string
              example: |
                The Prediction Guard API is healthy!

  /chat/completions:
    post:
      summary: Chat Completions
      description: Generate chat completions based on a conversation history.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - model
                - messages
              type: object
              properties:
                model:
                  type: string
                  description: The chat model to use for generating completions.
                messages:
                  type: array
                  description: An array of messages used for generating completions.
                  items:
                    required:
                      - role
                      - content
                    type: object
                    properties:
                      role:
                        type: string
                        description: The role of the sender (user or assistant).
                      content:
                        type: string
                        description: The content of the message.
                max_tokens:
                  type: integer
                  description: The maximum number of tokens in the generated completion.
                temperature:
                  type: number
                  description: The temperature parameter for controlling randomness in completions.
                top_p:
                  type: number
                  description: The diversity of the generated text.
                output:
                  type: object
                  description: Options to affect the output of the response.
                  properties:
                    factuality:
                      type: boolean
                      description: Set to true to turn on factuality processing.
                    toxicity:
                      type: boolean
                      description: Set to true to turn on toxicity processing.
                input:
                  type: object
                  description: Options to affect the input of the request.
                  properties:
                    block_prompt_injection:
                      type: boolean
                      description: Set to true to turn on factuality processing.
                    pii:
                      type: string
                      description: Set to either 'block' or 'replace'.
                    pii_replace_method:
                      type: string
                      description: Set to either 'random', 'fake', 'category', 'mask'.
            examples:
              basic:
                summary: A basic example of using the API.
                value: {
                  model: "Neural-Chat-7B",
                  messages: [
                    {
                      role: "user",
                      content: "How do you feel about the world in general?"
                    }
                  ],
                  max_tokens: 1000,
                  temperature: 1.1,
                  top_p: 0.1,
                  output: [
                    {
                      factuality: true,
                      toxicity: true
                    }
                  ],
                  input: [
                    {
                      pii: "replace",
                      pii_replace_method: "random"
                    }
                  ]
                }
      responses:
        '403':
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "api understands the request but refuses to authorize it"
              }
        '400':
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "required fields are missing"
              }
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the chat completion.
                  object:
                      type: string
                      description: Type of object (chat completion).
                  created:
                      type: integer
                      description: Timestamp of when the chat completion was created.
                  model:
                      type: string
                      description: The chat model used for generating completions.
                  choices:
                      type: array
                      description: The set of result choices.
                      items:
                        type: object
                        properties:
                          index:
                            type: integer
                            description: The index position in the collection.
                          status:
                            type: string
                            description: The response if this choice was successful.
                          message:
                            type: object
                            description: A result choice.
                            properties:
                              role:
                                type: string
                                description: The role of the sender (user or assistant).
                              content:
                                type: string
                                description: The content of the message.
                              output:
                                type: string
                                description: The output of the message.
              example: {
                id: "chat-IMT9tc2a3mqN5BabtfdjeFH1t1GAn",
                object: "chat_completion",
                created: 1717602741,
                model: "Neural-Chat-7B",
                choices: [
                  {
                    index: 0,
                    message: {
                      role: "assistant",
                      content: "I feel that the world in general is a complex and ever-evolving place. It has its fair share of beauty, challenges, and opportunities. There are moments of joy, connection, and growth, as well as pain, conflict, and loss. The world is a reflection of the people who inhabit it, and it's essential to maintain a balance between appreciating its wonders and working towards making it a better place for all. It's a constant journey of learning, adapting, and striving for a more harmonious existence.",
                      output: "null"
                    },
                    status: "success"
                  }
                ]
              }
      security:
        - ApiKeyCredentials: []

  /chat/completions - Streaming Version:
    post:
      summary: Chat Completions Streaming
      description: Generate chat completions based on a conversation history with streaming support.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - model
                - messages
              type: object
              properties:
                model:
                  type: string
                  description: The chat model to use for generating completions.
                messages:
                  type: array
                  description: An array of messages used for generating completions.
                  items:
                    required:
                      - role
                      - content
                    type: object
                    properties:
                      role:
                        type: string
                        description: The role of the sender (user or assistant).
                      content:
                        type: string
                        description: The content of the message.
                max_tokens:
                  type: integer
                  description: The maximum number of tokens in the generated completion.
                temperature:
                  type: number
                  description: The temperature parameter for controlling randomness in completions.
                top_p:
                  type: number
                  description: The diversity of the generated text.
                stream:
                  type: boolean
                  description: Turn streaming on.
            examples:
              basic:
                summary: A basic example of using the API.
                value: {
                  model: "Neural-Chat-7B",
                  messages: [
                    {
                      role: "user",
                      content: "How do you feel about the world in general?"
                    }
                  ],
                  max_tokens: 1000,
                  temperature: 1.1,
                  top_p: 0.1,
                  stream: true
                }
      responses:
        '403':
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "api understands the request but refuses to authorize it"
              }
        '400':
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "required fields are missing"
              }
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Unique ID for the chat completion.
                        object:
                            type: string
                            description: Type of object (chat completion).
                        created:
                            type: integer
                            description: Timestamp of when the chat completion was created.
                        model:
                            type: string
                            description: The chat model used for generating completions.
                        choices:
                            type: array
                            description: The set of result choices.
                            items:
                              type: object
                              properties:
                                index:
                                  type: integer
                                  description: The index position in the collection.
                                generated_text:
                                  type: string
                                  description: The final completed chat response which is provided when this is the last choice.
                                logprobs:
                                  type: number
                                  description: The log probabilty of accuracy for this choice.
                                finish_reason:
                                  type: string
                                  description: The reason the response has finished
                                delta:
                                  type: object
                                  description: The partial content for this choice.
                                  properties:
                                    content:
                                      type: string
                                      description: The partial content response for a choice.
              example: [
                {
                  data: {
                    id: "chat-QTBHDiLvhW6XJJKn4skhBDADZTIgd",
                    object: "chat.completion.chunk",
                    created: 1717678791,
                    model: "Neural-Chat-7B",
                    choices: [
                      {
                        index: 0,
                        delta: {
                          content: " I"
                        },
                        generated_text: "null",
                        logprobs: 0,
                        finish_reason: "null"
                      }
                    ]
                  }
                },
                {
                  data: {
                    id: "chat-BZvsPJsNvcIK0TfPOvC6UObFIsGSy",
                    object: "chat.completion.chunk",
                    created: 1717678792,
                    model: "Neural-Chat-7B",
                    choices: [
                      {
                        index: 0,
                        delta: {},
                        generated_text: "I feel that the world is a complex and dynamic place. It has its fair share of challenges and difficulties, but also offers numerous opportunities for growth, learning, and connection. The world is constantly evolving, and as individuals, we must adapt and find ways to contribute positively to society. It's essential to maintain a balance between acknowledging the problems and celebrating the progress and achievements, while also remembering the importance of compassion, empathy, and understanding towards one another. Overall, I believe it's essential to stay optimistic and work together towards a better future for all.",
                        logprobs: 0,
                        finish_reason: "stop"
                      }
                    ]
                  }
                }
              ]
      security:
        - ApiKeyCredentials: []

  /chat/completions - Vision Version:
    post:
      summary: Chat Completions Vision
      description: Generate chat completions based on a text and images.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - model
                - messages
              type: object
              properties:
                model:
                  type: string
                  description: The chat model to use for generating completions.
                messages:
                  type: array
                  description: An array of messages used for generating completions.
                  items:
                    required:
                      - role
                      - content
                    type: object
                    properties:
                      role:
                        type: string
                        description: The role of the sender (user or assistant).
                      content:
                        type: array
                        description: The content of the message.
                        items:
                          required:
                            - type
                          type: object
                          properties:
                            type:
                              type: string
                              description: The type of content ('text', 'image_url').
                            text:
                              type: string
                              description: The text to provide.
                            image_url:
                              type: object
                              properties:
                                url:
                                  type: string
                                  description: The base64 content with this prefix `data:image/jpeg;base64,`
                max_tokens:
                  type: integer
                  description: The maximum number of tokens in the generated completion.
                temperature:
                  type: number
                  description: The temperature parameter for controlling randomness in completions.
                top_p:
                  type: number
                  description: The diversity of the generated text.
            examples:
              basic:
                summary: A basic example of using the API.
                value: {
                  model: "llava-1.5-7b-hf",
                  messages: [
                    {
                      role: "user",
                      content: [
                        {
                          type: 'text',
                          text: input.question,
                        },
                        {
                          type: 'image_url',
                          image_url: {
                              url: 'data:image/jpeg;base64,<DATA>',
                          },
                        }
                      ]
                    }
                  ],
                  max_tokens: 1000,
                  temperature: 0.1,
                  top_p: 0.1
                }
      responses:
        '403':
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "api understands the request but refuses to authorize it"
              }
        '400':
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "required fields are missing"
              }
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the chat completion.
                  object:
                      type: string
                      description: Type of object (chat completion).
                  created:
                      type: integer
                      description: Timestamp of when the chat completion was created.
                  model:
                      type: string
                      description: The chat model used for generating completions.
                  choices:
                      type: array
                      description: The set of result choices.
                      items:
                        type: object
                        properties:
                          index:
                            type: integer
                            description: The index position in the collection.
                          status:
                            type: string
                            description: The response if this choice was successful.
                          message:
                            type: object
                            description: A result choice.
                            properties:
                              role:
                                type: string
                                description: The role of the sender (user or assistant).
                              content:
                                type: string
                                description: The content of the message.
                              output:
                                type: string
                                description: The output of the message.
              example: {
                id: "chat-8qptYQ1EC1cPhHIKh7ArD5OxKN01N",
                object: "chat_completion",
                created: 1717681459,
                model: "llava-1.5-7b-hf",
                choices: [
                  {
                    index: 0,
                    message: {
                      role: "assistant",
                      content: "No, there is no deer in this picture. The image features a man wearing a hat and glasses, smiling for the camera.",
                      output: "null"
                    },
                    status: "success"
                  }
                ]
              }
      security:
        - ApiKeyCredentials: []

  /completions:
    post:
      summary: Completions
      description: Retrieve text completions based on the provided input.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - model
                - prompt
              type: object
              properties:
                model:
                  type: string
                  description: The chat model to use for generating completions.
                prompt:
                  type: string
                  description: The prompt to use for generating completions.
                max_tokens:
                  type: integer
                  description: The maximum number of tokens in the generated completion.
                temperature:
                  type: number
                  description: The temperature parameter for controlling randomness in completions.
                top_p:
                  type: number
                  description: The diversity of the generated text.
            examples:
              basic:
                summary: A basic example of using the API.
                value: {
                  model: "Neural-Chat-7B",
                  prompt: "Will I lose my hair?",
                  max_tokens: 1000,
                  temperature: 1.1,
                  top_p: 0.1
                }
      responses:
        '403':
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "api understands the request but refuses to authorize it"
              }
        '400':
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "required fields are missing"
              }
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the chat completion.
                  object:
                      type: string
                      description: Type of object (chat completion).
                  created:
                      type: integer
                      description: Timestamp of when the chat completion was created.
                  choices:
                      type: array
                      description: The set of result choices.
                      items:
                        type: object
                        properties:
                          index:
                            type: integer
                            description: The index position in the collection.
                          model:
                            type: string
                            description: The model used for generating the result.
                          status:
                            type: string
                            description: The response if this choice was successful.
                          text:
                            type: string
                            description: The generated text.
              example: {
                id: "cmpl-vt14rz28aihTwstFPuAfZQIP5FTI7",
                object: "text_completion",
                created: 1717613547,
                choices: [
                  {
                    index: 0,
                    model: "Neural-Chat-7B",
                    text: "if I get a hair transplant?\n\nHair transplant is a surgical procedure that involves moving hair follicles from one part of the head to another. The procedure is designed to address hair loss and restore a fuller, more natural-looking head of hair. While hair transplant does not cause hair loss, it is essential to understand that the underlying cause of hair loss must be addressed to ensure long-term success.\n\nIn some cases, hair loss may be temporary due to the stress of the surgery or the use of certain medications. However, this is usually short-lived and will resolve on its own. To minimize the risk of temporary hair loss, it is crucial to follow your surgeon's post-operative instructions carefully and maintain a healthy lifestyle.\n\nIn summary, hair transplant does not cause hair loss, but it is essential to address the underlying cause of hair loss to achieve the best results. Temporary hair loss may occur, but it is typically short-lived and resolves on its own.",
                    status: "success"
                  }
                ]
              }
      security:
        - ApiKeyCredentials: []

  /embedding:
    post:
      summary: Embedding
      description: Generate vector data points from text and images.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - model
                - input
              type: object
              properties:
                model:
                  type: string
                  description: The model to use for generating vectors. Must be `bridgetower-large-itm-mlm-itc` for now.
                input:
                  type: array
                  description: An array of text and or images.
                  items:
                    type: object
                    properties:
                      text:
                        type: string
                        description: The text to vectorize. You can choose to provide this or not.
                      image:
                        type: string
                        description: The base64 encoding of an image. You can choose to provide this or not.
            examples:
              basic:
                summary: A basic example of using the API.
                value: {
                  model: "bridgetower-large-itm-mlm-itc",
                  input: [
                    {
                      text: "This is Bill Kennedy, a decent Go developer.",
                      image: "<base64 encoded image>"
                    }
                  ]
                }
      responses:
        '403':
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "api understands the request but refuses to authorize it"
              }
        '400':
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "required fields are missing"
              }
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the chat completion.
                  object:
                      type: string
                      description: Type of object (chat completion).
                  created:
                      type: integer
                      description: Timestamp of when the chat completion was created.
                  model:
                      type: string
                      description: The chat model used for generating completions.
                  data:
                      type: array
                      description: The set of vectorized data.
                      items:
                        type: object
                        properties:
                          index:
                            type: integer
                            description: The index position in the collection.
                          status:
                            type: string
                            description: The response if this choice was successful.
                          embedding:
                            type: array
                            description: The array of vector values.
                            items:
                              type: number
              example: {
                id: "emb-KBUhJ8dAc0hfGQhaWCLwRf5bYU8fw",
                object: "embedding_batch",
                created: 1717614704,
                model: "bridgetower-large-itm-mlm-itc",
                data: [
                  {
                    index: 0,
                    status: "success",
                    embedding: [-0.04457271471619606, -0.007496959064155817]
                  }
                ]
              }
      security:
        - ApiKeyCredentials: []

  /factuality:
    post:
      summary: Factuality
      description: Check the factuality of a given text compared to a reference.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - reference
                - text
              type: object
              properties:
                reference:
                  type: string
                  description: The reference text for comparison.
                text:
                  type: string
                  description: The the text to be checked for factuality.
            examples:
              basic:
                summary: A basic example of using the API.
                value: {
                  reference: "The President shall receive in full for his services during the term for which he shall have been elected compensation in the aggregate amount of 400,000 a year, to be paid monthly, and in addition an expense allowance of 50,000 to assist in defraying expenses relating to or resulting from the discharge of his official duties.",
                  text: "The president of the united states can take a salary of one million dollars"
                }
      responses:
        '403':
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "api understands the request but refuses to authorize it"
              }
        '400':
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "required fields are missing"
              }
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the chat completion.
                  object:
                      type: string
                      description: Type of object (chat completion).
                  created:
                      type: integer
                      description: Timestamp of when the chat completion was created.
                  checks:
                      type: array
                      description: The set of vectorized data.
                      items:
                        type: object
                        properties:
                          index:
                            type: integer
                            description: The index position in the collection.
                          score:
                            type: number
                            description: The factuality score.
                          status:
                            type: string
                            description: The response if this choice was successful.
              example: {
                id: "fact-JJtvGAUpioXgzwBGpwWiRVb3DSWgo",
                object: "factuality_check",
                created: 1717674781,
                checks: [
                  {
                    index: 0,
                    score: 0.7879657745361328,
                    status: "success"
                  }
                ]
              }
      security:
        - ApiKeyCredentials: []

  /injection:
    post:
      summary: Injection
      description: Injection detects potential prompt injection attacks.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - prompt
                - detect
              type: object
              properties:
                prompt:
                  type: string
                  description: The prompt to check for injection attack.
                detect:
                  type: boolean
                  description: Whether to detect potential injection attacks.
            examples:
              basic:
                summary: A basic example of using the API.
                value: {
                  prompt: "A short poem may be a stylistic choice or it may be that you have said what you intended to say in a more concise way.",
                  detect: true
                }
      responses:
        '403':
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "api understands the request but refuses to authorize it"
              }
        '400':
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "required fields are missing"
              }
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the chat completion.
                  object:
                      type: string
                      description: Type of object (chat completion).
                  created:
                      type: integer
                      description: Timestamp of when the chat completion was created.
                  checks:
                      type: array
                      description: The set of vectorized data.
                      items:
                        type: object
                        properties:
                          index:
                            type: integer
                            description: The index position in the collection.
                          probability:
                            type: number
                            description: The probability of a potential injection attack.
                          status:
                            type: string
                            description: The response if this choice was successful.
              example: {
                id: "injection-nYb6vl44Uy6gQQ2pmBYYirGquP8vnDyj",
                object: "injection_check",
                created: 1717675539,
                checks: [
                  {
                    index: 0,
                    probability: 0.5,
                    status: "success"
                  }
                ]
              }
      security:
        - ApiKeyCredentials: []

  /PII:
    post:
      summary: Replace Personal Information
      description: Replace personal information such as names, SSNs, and emails in a given text.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - prompt
                - replace
                - replace_method
              type: object
              properties:
                prompt:
                  type: string
                  description: The prompt to check for personal information.
                replace:
                  type: boolean
                  description: Whether to replace personal information.
                replace_method:
                  type: string
                  description: The method to use (random, fake, category, mask).
            examples:
              basic:
                summary: A basic example of using the API.
                value: {
                  prompt: "My email is bill@ardanlabs.com and my number is 954-123-4567.",
                  replace: true,
                  replace_method: "mask"
                }
      responses:
        '403':
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "api understands the request but refuses to authorize it"
              }
        '400':
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "required fields are missing"
              }
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the chat completion.
                  object:
                      type: string
                      description: Type of object (chat completion).
                  created:
                      type: integer
                      description: Timestamp of when the chat completion was created.
                  checks:
                      type: array
                      description: The set of vectorized data.
                      items:
                        type: object
                        properties:
                          index:
                            type: integer
                            description: The index position in the collection.
                          new_prompt:
                            type: string
                            description: The new prompt with the replaced information.
                          status:
                            type: string
                            description: The response if this choice was successful.
              example: {
                id: "pii-MCZ68Tol2Laj0HgoJtvS5CaSljISkWN1",
                object: "pii_check",
                created: 1717675949,
                checks: [
                  {
                    index: 0,
                    new_prompt: "My email is * and my number is *.",
                    status: "success"
                  }
                ]
              }
      security:
        - ApiKeyCredentials: []

  /toxicity:
    post:
      summary: Toxicity
      description: Check the toxicity of a given text.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - text
              type: object
              properties:
                text:
                  type: string
                  description: The text to check for toxicity.
            examples:
              basic:
                summary: A basic example of using the API.
                value: {
                  text: "Every flight I have is late and I am very angry. I want to hurt someone."
                }
      responses:
        '403':
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "api understands the request but refuses to authorize it"
              }
        '400':
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "required fields are missing"
              }
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the chat completion.
                  object:
                      type: string
                      description: Type of object (chat completion).
                  created:
                      type: integer
                      description: Timestamp of when the chat completion was created.
                  checks:
                      type: array
                      description: The set of vectorized data.
                      items:
                        type: object
                        properties:
                          index:
                            type: integer
                            description: The index position in the collection.
                          score:
                            type: number
                            description: The toxicity score.
                          status:
                            type: string
                            description: The response if this choice was successful.
              example: {
                id: "toxi-bcUAQEaWhMweS3Jpi3nT9SJys28XN",
                object: "toxicity_check",
                created: 1717676257,
                checks: [
                  {
                    index: 0,
                    score: 0.7072361707687378,
                    status: "success"
                  }
                ]
              }
      security:
        - ApiKeyCredentials: []

  /translate:
    post:
      summary: Translate
      description: Translate text from one language to another.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - text
                - source_lang
                - target_lang
              type: object
              properties:
                text:
                  type: string
                  description: The text to check for toxicity.
                source_lang:
                  type: string
                  description: The source language of the text.
                target_lang:
                  type: string
                  description: The target language for the translation.
            examples:
              basic:
                summary: A basic example of using the API.
                value: {
                  text: "The rain in Spain stays mainly in the plain",
                  source_lang: "eng",
                  target_lang: "spa"
                }
      responses:
        '403':
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "api understands the request but refuses to authorize it"
              }
        '400':
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example: {
                error: "required fields are missing"
              }
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the chat completion.
                  object:
                      type: string
                      description: Type of object (chat completion).
                  created:
                      type: integer
                      description: Timestamp of when the chat completion was created.
                  best_translation:
                      type: string
                      description: The best translation of the input text.
                  best_score:
                      type: number
                      description: The best score for the best translation.
                  best_translation_model:
                      type: string
                      description: The model used for the best translation.
                  translations:
                      type: array
                      description: The set translations from different models.
                      items:
                        type: object
                        properties:
                          score:
                            type: number
                            description: The quality score for this translation.
                          translation:
                            type: string
                            description: The translation.
                          model:
                            type: string
                            description: The model that was used for this translation.
                          status:
                            type: string
                            description: The status of using the model for this translation.
              example: {
                id: "translation-9b2c6f43cf7d4fe69cb9b9e6a4478999",
                object: "translation",
                created: 1717676604,
                best_translation: "La lluvia en España permanece principalmente en la llanura",
                best_score: 0.5381202101707458,
                best_translation_model: "google",
                translations: [
                  {
                    score: -100,
                    translation: "",
                    model: "openai",
                    status: "error: couldn’t get translation"
                  },
                  {
                    score: 0.5008216500282288,
                    translation: "La lluvia en España se queda principalmente en la llanura",
                    model: "deepl",
                    status: "success"
                  },
                  {
                    score: 0.5381202101707458,
                    translation: "La lluvia en España permanece principalmente en la llanura",
                    model: "google",
                    status: "success"
                  },
                  {
                    score: 0.4843788146972656,
                    translation: "La lluvia en España se queda principalmente en la llanura.",
                    model: "nous_hermes_llama2",
                    status: "success"
                  }
                ]
              }
      security:
        - ApiKeyCredentials: []

components:
  securitySchemes:
    ApiKeyCredentials:
      type: apiKey
      name: x-api-key
      in: header
