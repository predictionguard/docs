openapi: 3.1.0

info:
  title: Prediction Guard API
  description: "This is the Prediction Guard API, designed to provide various language-related services and checks."
  version: "1.2"

servers:
  - url: https://api.predictionguard.com

paths:
  "/":
    get:
      summary: Check API Health
      description: A simple endpoint to check if the Prediction Guard API is healthy.
      responses:
        "200":
          description: Successful response with a simple healthy message.
          content:
            application/json:
              schema:
                type: string
                items:
                  type: string
              examples:
                example1:
                  value: "The Prediction Guard API is healthy!"
                  
  /chat/completions:
    post:
      summary: Chat Completions
      description: Generate chat completions based on a conversation history.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - model
                - messages
              type: object
              properties:
                model:
                  type: string
                  description: The chat model to use for generating completions.
                messages:
                  oneOf:
                    - type: string
                      description: A string of the message used for generating completions.
                    - type: array
                      description: An array of messages used for generating completions.
                      items:
                        required:
                          - role
                          - content
                        type: object
                        properties:
                          role:
                            type: string
                            description: The role of the sender (user or assistant).
                          content:
                            oneOf:
                              - type: string
                                description: A string of the message content
                              - type: array
                                description: The content of the message, used for file inputs.
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      description: The type of content ('text', 'image_url').
                                    text:
                                      type: string
                                      description: The text to provide.
                                    image_url:
                                      type: object
                                      properties:
                                        url:
                                          type: string
                                          description: The base64 content with this prefix `data:image/jpeg;base64,`
                frequency_penalty:
                  type: number
                  description: A value between -2.0 and 2.0, with positive values increasingly penalizing new tokens based on their frequency so far in order to decrease further occurrences.
                logit_bias:
                  type: map
                  description: Modifies the likelihood of specified tokens appearing in a response.
                  properties:
                    token:
                      type: string
                      description: A string of the chosen token ID. Value is an int from -100 to 100.
                max_completion_tokens:
                  type: integer
                  description: The maximum number of tokens in the generated completion.
                parallel_tool_calls:
                  type: boolean
                  description: Whether to enable parallel function calling during tool use.
                presence_penalty:
                  type: number
                  description: A value between -2.0 and 2.0, with positive values causing a flat reduction of new tokens based on their existing presence so far in order to decrease further occurrences.
                stop:
                  oneOf:
                    - type: string
                      description: A string representing the token to stop generation.
                    - type: array
                      description: An array representing the token to stop generation.
                      items:
                        type: string
                        description: A string representing the token to stop generation.
                stream:
                  type: boolean
                  description: Whether to stream back the model response.
                temperature:
                  type: number
                  description: The temperature parameter for controlling randomness in completions.
                tool_choice:
                  oneOf:
                    - type: string
                      description: A string representing a tool choice. Options are 'none', 'auto', or 'required'.
                    - type: object
                      description: An object representing the tool to be chosen
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            description: The type of tool.
                          function:
                            type: object
                            description: An object containing the name of the function
                            properties:
                              name: string
                tools:
                  type: array
                  description: The content of the tool call.
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        description: The type of tool to call. Only 'function' is currently supported.
                      function:
                        type: object
                        description: The tool information.
                        properties:
                          name:
                            type: string
                            description: The name of the function to be called.
                          description:
                            type: string
                            description: A description of what the function does.
                          parameters:
                            type: object
                            description: The parameters the function accepts, described as a JSON Schema object.
                          strict:
                            type: boolean
                            description: Whether to enable strict schema adherence when generating the function call.
                top_p:
                  type: number
                  description: The diversity of the generated text based on nucleus sampling.
                top_k:
                  type: integer
                  description: The diversity of the generated text based on top-k sampling.
                output:
                  type: object
                  description: Options to affect the output of the response.
                  properties:
                    factuality:
                      type: boolean
                      description: Set to true to turn on factuality processing.
                    toxicity:
                      type: boolean
                      description: Set to true to turn on toxicity processing.
                input:
                  type: object
                  description: Options to affect the input of the request.
                  properties:
                    block_prompt_injection:
                      type: boolean
                      description: Set to true to detect prompt injection attacks.
                    pii:
                      type: string
                      description: Set to either 'block' or 'replace'.
                    pii_replace_method:
                      type: string
                      description: Set to either 'random', 'fake', 'category', 'mask'.
                max_tokens:
                  type: integer
                  description: Deprecated. Please use max_completion_tokens.
            examples:
              basic:
                summary: A basic example of using the API.
                value:
                  model: "{{TEXT_MODEL}}"
                  messages:
                    - role: "user"
                      content: "How do you feel about the world in general?"
                  max_completion_tokens: 1000
                  frequency_penalty: 0.1
                  logit_bias:
                    128000: 10
                  parallel_tool_calls: false
                  presence_penalty: 0.1
                  stop: "hello"
                  temperature: 1.0
                  top_p: 1.0
                  top_k: 50
                  output:
                    factuality: true
                    toxicity: true
                  input:
                    pii: "replace"
                    pii_replace_method: "random"
              streaming:
                summary: An example of using the API with streaming.
                value:
                  model: "{{TEXT_MODEL}}"
                  messages:
                    - role: "user"
                      content: "How do you feel about the world in general?"
                  max_completion_tokens: 1000
                  frequency_penalty: 0.1
                  logit_bias:
                    128000: 10
                  parallel_tool_calls: false
                  presence_penalty: 0.1
                  stop: "hello"
                  temperature: 1.0
                  top_p: 1.0
                  top_k: 50
                  stream: true
                  input:
                    pii: "replace"
                    pii_replace_method: "random"
              image input:
                summary: An example of using the API with images.
                value:
                  model: "{{VISION_MODEL}}"
                  messages:
                    - role: "user"
                      content:
                        - type: "text"
                          text: "What is in this image?"
                        - type: "image_url"
                          image_url:
                            url: "data:image/jpeg;base64,<DATA>"
                  max_completion_tokens: 1000
                  frequency_penalty: 0.1
                  logit_bias:
                    128000: 10
                  parallel_tool_calls: false
                  presence_penalty: 0.1
                  stop: "hello"
                  temperature: 1.0
                  top_p: 1.0
                  top_k: 50
                  output:
                    factuality: true
                    toxicity: true
                  input:
                    pii: "replace"
                    pii_replace_method: "random"
              function call:
                summary: An example of using the API to call functions.
                value:
                  model: "{{TEXT_MODEL}}"
                  messages:
                    - role: "user"
                      content: "How do you feel about the world in general?"
                  max_completion_tokens: 1000
                  frequency_penalty: 0.1
                  logit_bias:
                    128000: 10
                  parallel_tool_calls: false
                  presence_penalty: 0.1
                  stop: "hello"
                  temperature: 1.0
                  tool_choice:
                    type: "function"
                    function:
                      name: "get_current_weather"
                  tools:
                    - type: "function"
                      function:
                        name: "get_current_weather"
                        description: "Get the current weather in a given location"
                        strict: false
                        parameters:
                          type: "object"
                          properties:
                            location:
                              type: "string"
                              enum:
                                - "celsius"
                                - "fahrenheit"
                          required:
                            - "location"
                  top_p: 1.0
                  top_k: 50
                  output:
                    factuality: true
                    toxicity: true
                  input:
                    pii: "replace"
                    pii_replace_method: "random"
      responses:
        "403":
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "api understands the request but refuses to authorize it"
        "400":
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "required fields are missing"
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the chat completion.
                  object:
                    type: string
                    description: Type of object (chat completion).
                  created:
                    type: integer
                    description: Timestamp of when the chat completion was created.
                  model:
                    type: string
                    description: The chat model used for generating completions.
                  choices:
                    type: array
                    description: The set of result choices.
                    items:
                      type: object
                      properties:
                        index:
                          type: integer
                          description: The index position in the collection.
                        message:
                          type: object
                          description: A result choice.
                          properties:
                            role:
                              type: string
                              description: The role of the sender (user or assistant).
                            content:
                              type: string
                              description: The content of the message.
                            tool_calls:
                              type: array
                              description: The tool call function.
                              properties:
                                id:
                                  type: string
                                  description: The autogenerated ID of the function.
                                type:
                                  type: string
                                  description: The type of tool called.
                                function:
                                  type: object
                                  description: The tool call function data.
                                  properties:
                                    name:
                                      type: string
                                      description: The name of the function.
                                    arguments:
                                      type: string
                                      description: The function arguments.
              examples:
                basic:
                  id: "chat-d079eca8-1d6a-451a-a4ac-b0fea1e11a96"
                  object: "chat.completion"
                  created: 1727890629
                  model: "{{TEXT_MODEL}}"
                  choices:
                    - index: 0
                      message:
                        role: "assistant"
                        content: "I feel that the world in general is a complex and ever-evolving place. It has its fair share of beauty, challenges, and opportunities. There are moments of joy, connection, and growth, as well as pain, conflict, and loss. The world is a reflection of the people who inhabit it, and it's essential to maintain a balance between appreciating its wonders and working towards making it a better place for all. It's a constant journey of learning, adapting, and striving for a more harmonious existence."
                image input:
                  id: "chat-554c4c24-a1ea-4c9f-b91c-612bbac34f4e"
                  object: "chat.completion"
                  created: 1727890364
                  model: "{{VISION_MODEL}}"
                  choices:
                    - index: 0
                      message:
                        role: "assistant"
                        content: "No, there is no deer in this picture. The image features a man wearing a hat and glasses, smiling for the camera."
                streaming:
                  format: sse
                  value:
                    - id: "chat-6c8c291f-5a06-46e5-94fa-2b0b1e6444c7"
                      object: "chat.completion.chunk"
                      created: 1727796455
                      model: "{{TEXT_MODEL}}"
                      choices:
                        - index: 0
                          delta: { content: " I" }
                          generated_text: "null"
                          finish_reason: "null"
                    - id: "chat-6c8c291f-5a06-46e5-94fa-2b0b1e6444c7"
                      object: "chat.completion.chunk"
                      created: 1727796455
                      model: "{{TEXT_MODEL}}"
                      choices:
                        - index: 0
                          delta: { content: " feel" }
                          generated_text: "null"
                          finish_reason: "length"
                function call:
                  id: "chat-d079eca8-1d6a-451a-a4ac-b0fea1e11a96"
                  object: "chat.completion"
                  created: 1727890629
                  model: "{{TEXT_MODEL}}"
                  choices:
                    - index: 0
                      message:
                        role: "assistant"
                        content: "I feel that the world in general is a complex and ever-evolving place. It has its fair share of beauty, challenges, and opportunities. There are moments of joy, connection, and growth, as well as pain, conflict, and loss. The world is a reflection of the people who inhabit it, and it's essential to maintain a balance between appreciating its wonders and working towards making it a better place for all. It's a constant journey of learning, adapting, and striving for a more harmonious existence."
                        tool_calls:
                          id: "chatcmpl-tool-d8429654d03945c2b70a4a8d05eb7c6d"
                          type: "function"
                          function:
                            name: "get_current_weather"
                            arguments: "{\n    \"location\": \"celsius\"\n}"
      security:
        - bearerAuth: []


  /completions:
    post:
      summary: Completions
      description: Retrieve text completions based on the provided input.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - model
                - prompt
              type: object
              properties:
                model:
                  type: string
                  description: The chat model to use for generating completions.
                prompt:
                  type: string
                  description: The prompt to use for generating completions.
                frequency_penalty:
                  type: number
                  description: A value between -2.0 and 2.0, with positive values increasingly penalizing new tokens based on their frequency so far in order to decrease further occurrences.
                logit_bias:
                  type: map
                  description: Modifies the likelihood of specified tokens appearing in a response.
                  properties:
                    token:
                      type: string
                      description: A string of the chosen token ID. Value is an int from -100 to 100.
                max_tokens:
                  type: integer
                  description: The maximum number of tokens in the generated completion.
                presence_penalty:
                  type: number
                  description: A value between -2.0 and 2.0, with positive values causing a flat reduction of new tokens based on their existing presence so far in order to decrease further occurrences.
                stop:
                  oneOf:
                    - type: string
                      description: A string representing the token to stop generation.
                    - type: array
                      description: An array representing the token to stop generation.
                      items:
                        type: string
                        description: A string representing the token to stop generation.
                stream:
                  type: boolean
                  description: Whether to stream back the model response.
                temperature:
                  type: number
                  description: The temperature parameter for controlling randomness in completions.
                top_p:
                  type: number
                  description: The diversity of the generated text based on nucleus sampling.
                top_k:
                  type: integer
                  description: The diversity of the generated text based on top-k sampling.
                output:
                  type: object
                  description: Options to affect the output of the response.
                  properties:
                    factuality:
                      type: boolean
                      description: Set to true to turn on factuality processing.
                    toxicity:
                      type: boolean
                      description: Set to true to turn on toxicity processing.
                input:
                  type: object
                  description: Options to affect the input of the request.
                  properties:
                    block_prompt_injection:
                      type: boolean
                      description: Set to true to detect prompt injection attacks.
                    pii:
                      type: string
                      description: Set to either 'block' or 'replace'.
                    pii_replace_method:
                      type: string
                      description: Set to either 'random', 'fake', 'category', 'mask'.
            examples:
              basic:
                summary: A basic example of using the API.
                value:
                  model: "{{TEXT_MODEL}}"
                  prompt: "Will I lose my hair?"
                  max_tokens: 1000
                  frequency_penalty: 0.1
                  logit_bias:
                    128000: 10
                  presence_penalty: 0.1
                  stop: "hello"
                  temperature: 1.0
                  top_p: 1.0
                  top_k: 50
                  output:
                    factuality: true
                    toxicity: true
                  input:
                    pii: "replace"
                    pii_replace_method: "random"
              streaming:
                summary: A streaming example using the API.
                value:
                  model: "{{TEXT_MODEL}}"
                  prompt: "Will I lose my hair?"
                  max_tokens: 1000
                  frequency_penalty: 0.1
                  logit_bias:
                    128000: 10
                  presence_penalty: 0.1
                  stop: "hello"
                  stream: true
                  temperature: 1.0
                  top_p: 1.0
                  top_k: 50
                  output:
                    factuality: true
                    toxicity: true
                  input:
                    pii: "replace"
                    pii_replace_method: "random"
      responses:
        "403":
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "api understands the request but refuses to authorize it"
        "400":
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "required fields are missing"
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the completion.
                  object:
                    type: string
                    description: Type of object (completion).
                  created:
                    type: integer
                    description: Timestamp of when the completion was created.
                  model:
                    type: string
                    description: The model used for generating the result.
                  choices:
                    type: array
                    description: The set of result choices.
                    items:
                      type: object
                      properties:
                        index:
                          type: integer
                          description: The index position in the collection.
                        text:
                          type: string
                          description: The generated text.
              examples:
                basic:
                  id: "cmpl-d20e5639-ed8d-48b2-a403-08fe0fdc7add"
                  object: "text_completion"
                  created: 1727889988
                  model: "{{TEXT_MODEL}}"
                  choices:
                    - index: 0
                      text: "Most people lose some hair every day. It’s a natural process called shedding. On average, you can lose 50-100 strands of hair a day. However, if you notice an increase in hair loss or if you are experiencing hair loss in large clumps, then it could be a sign of an underlying condition. Hair loss can be triggered by a number of factors such as stress, illness, hormone imbalance, medication, and genetics.\nIf you’re concerned about hair loss, you should consult with a trichologist, a hair and scalp specialist. They can help determine the cause of your hair loss and recommend the appropriate treatment."
                streaming:
                  value:
                    - id": "cmpl-4b78eda0a81145b495fc13c2b3da2041"
                      object: "text_completion"
                      created: 1750950603
                      model: "{{TEXT_MODEL}}"
                      choices:
                        - index: 0
                          text: " please"
                          finish_reason: null
                          stop_reason: null
                    - id: "cmpl-4b78eda0a81145b495fc13c2b3da2041"
                      object: "text_completion"
                      created: 1750950603
                      model: "{{TEXT_MODEL}}"
                      choices:
                        - index: 0
                          text: "!\n"
                          finish_reason: null
                          stop_reason: null
      security:
        - bearerAuth: []


  /embeddings:
    post:
      summary: Embeddings
      description: Generate vector data points from text and images.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - model
                - input
              type: object
              properties:
                model:
                  type: string
                  description: The model to use for generating vectors.
                input:
                  oneOf:
                    - type: string
                      description: A string of text to be embedded.
                    - type: array
                      description: An array of strings or objects containing the text and/or images to be embedded.
                      items:
                        oneOf:
                          - type: string
                            description: A string of text to be embedded.
                          - type: integer
                            description: A token to be embedded.
                          - type: array
                            description: An array of tokens to be embedded.
                            items:
                              type: integer
                              description: A token to be embedded.
                          - type: object
                            description: Use this option for multimodal input.
                            properties:
                              text:
                                type: string
                                description: The text to embed. You can choose to provide this or not.
                              image:
                                type: string
                                description: The base64 encoding of an image. You can choose to provide this or not.
                truncate:
                  type: boolean
                  description: Boolean setting whether to truncate inputs. Not supported by bridgetower.
                truncation_direction:
                  type: string
                  description: Which direction to truncate, "Left" or "Right". Not supported by bridgetower.
            examples:
              basic:
                summary: A text example of using the API.
                value:
                  model: "{{TEXT_EMBED}}"
                  input: "A person is ironing something while standing on the back of a taxi."
                  truncate: true
                  truncation_direction: "Right"
              image input:
                summary: A multimodal example of using the API.
                value:
                  model: "{{IMAGE_EMBED}}"
                  input:
                    - text: "A person is ironing something while standing on the back of a taxi."
                      image: "<base64 encoded image>"
      responses:
        "403":
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "api understands the request but refuses to authorize it"
        "400":
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "required fields are missing"
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the embeddings.
                  object:
                    type: string
                    description: Type of object (list).
                  created:
                    type: integer
                    description: Timestamp of when the embeddings was created.
                  model:
                    type: string
                    description: The embeddings model used.
                  data:
                    type: array
                    description: The set of vectorized data.
                    items:
                      type: object
                      properties:
                        index:
                          type: integer
                          description: The index position in the collection.
                        embedding:
                          type: array
                          description: The array of vector values.
                          items:
                            type: number
              examples:
                basic:
                  id: "emb-5b310173-3cc9-4470-aa3b-7503aacb4f38"
                  object: "list"
                  created: 1729115349
                  model: "{{TEXT_EMBED}}"
                  data:
                    - index: 0
                      embedding: [0.0150606595, 0.04376322]
                image input:
                  id: "emb-5b310173-3cc9-4470-aa3b-7503aacb4f38"
                  object: "list"
                  created: 1729115349
                  model: "{{IMAGE_EMBED}}"
                  data:
                    - index: 0
                      embedding: [ 0.0150606595, 0.04376322 ]
      security:
        - bearerAuth: []

  /audio/transcriptions:
    post:
      summary: Audio Transcription
      description: This endpoint allows you to transcribe audio.
      parameters:
        - name: Toxicity
          in: header
          description: Whether to check the output for toxicity.
          schema:
            type: boolean
          example: true
        - name: Pii
          in: header
          description: Whether to check the output for Pii, and what to do if found. Supported values are 'replace' and 'block'.
          schema:
            type: string
          example: "replace"
        - name: Replace-Method
          in: header
          description: Method to replace any found PII. Supported values are 'category', 'fake', 'mask', and 'random'.
          schema:
            type: string
          example: "category"
        - name: Injection
          in: header
          description: Whether to check the output for a prompt injection.
          schema:
            type: boolean
          example: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                model:
                  type: string
                  description: The transcription model to use.
                file:
                  type: string
                  format: binary
                  description: The audio file to upload.
                language:
                  type: string
                  description: The language the audio is in.
                prompt:
                  type: string
                  description: An optional text to guide the model's style or continue a previous audio segment.
                temperature:
                  type: number
                  description: The temperature parameter for controlling randomness in transcription.
              required:
                - file
                - model
            examples:
              basic:
                summary: A text example of using the API.
                value:
                  model: "{{AUDIO_MODEL}}"
                  file: "jfk.wav"
      responses:
        "403":
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "api understands the request but refuses to authorize it"
        "400":
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "required fields are missing"
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                    description: The transcribed audio.
              examples:
                successExample:
                  summary: Successful Response Example
                  value:
                    text: "And so my fellow Americans, ask not what your country can do for you, ask what you can do for your country."
      security:
        - bearerAuth: []

  /documents/extract:
    post:
      summary: Documents Extract
      description: This endpoint allows you to parse text from documents using OCR.
      parameters:
        - name: Toxicity
          in: header
          description: Whether to check the output for toxicity.
          schema:
            type: boolean
          example: true
        - name: Pii
          in: header
          description: Whether to check the output for Pii, and what to do if found. Supported values are 'replace' and 'block'.
          schema:
            type: string
          example: "replace"
        - name: Replace-Method
          in: header
          description: Method to replace any found PII. Supported values are 'category', 'fake', 'mask', and 'random'.
          schema:
            type: string
          example: "category"
        - name: Injection
          in: header
          description: Whether to check the output for a prompt injection.
          schema:
            type: boolean
          example: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The document file to upload.
                embedImages:
                  type: boolean
                  description: Whether to embed images from the document.
                outputFormat:
                  type: string
                  description: The output format for the content of the document.
                chunkDocument:
                  type: boolean
                  description: Whether to separate the document into chunks.
                chunkSize:
                  type: integer
                  description: The size of chunks for the documents.
                enableOCR:
                  type: boolean
                  description: Whether to enable OCR for document parsing.
              required:
                - file
            examples:
              multipart/form-data:
                summary: A text example of using the API.
                value:
                  file: "sample.pdf"
                  embedImages: false
                  outputFormat: "markdown"
                  chunkDocument: true
                  chunkSize: 1000
                  enableOCR: true
      responses:
        "403":
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "api understands the request but refuses to authorize it"
        "400":
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "required fields are missing"
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    description: The parsed document title.
                  contents:
                    type: string
                    description: The parsed document contents.
                  count:
                    type: integer
                    description: The word count for the document.
              examples:
                successExample:
                  summary: Successful Response Example
                  value:
                    title: "sample.pdf"
                    contents: "## Sample PDF\n\n## This is a simple PDF file. Fun fun fun.\n\nLorem ipsum dolor sit amet,  consectetuer adipiscing elit. Phasellus facilisis odio sed mi. Curabitur suscipit..."
                    count: 3041
      security:
        - bearerAuth: []

  /rerank:
    post:
      summary: Rerank
      description: Rerank sorts text inputs by semantic relevance to a specified query.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - model
                - query
                - documents
              type: object
              properties:
                model:
                  type: string
                  description: The model to use for reranking.
                query:
                  type: string
                  description: The query to rank against.
                documents:
                  type: array
                  description: Array of documents to rank.
                  items:
                    type: string
                    description: Documents to rank.
                return_documents:
                  type: boolean
                  description: Boolean setting whether to return documents in output.
            examples:
              basic:
                summary: A text example of using the API.
                value:
                  model: "{{RERANK_MODEL}}"
                  query: "What is Deep Learning?"
                  documents:
                    - "Deep Learning is pizza."
                    - "Deep Learning is not pizza."
                  return_documents: true
      responses:
        "403":
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "api understands the request but refuses to authorize it"
        "400":
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "required fields are missing"
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the rerank response.
                  object:
                    type: string
                    description: Type of object (list).
                  created:
                    type: integer
                    description: Timestamp of when the rerank response was created.
                  model:
                    type: string
                    description: The rerank model used.
                  results:
                    type: array
                    description: The set of rankings.
                    items:
                      type: object
                      properties:
                        index:
                          type: integer
                          description: The index position in the collection.
                        relevance_score:
                          type: number
                          description: The relevance ranking score.
                        text:
                          type: string
                          description: The returned document
              example:
                id: "rerank-39bf1cf3-66cd-43d5-9185-b52baf742414"
                object: "list"
                created: 1732039610
                model: "{{RERANK_MODEL}}"
                results:
                  - index: 0
                    relevance_score: 0.25128007
                    text: "Deep Learning is not pizza."
                  - index: 1
                    relevance_score: 0.5100618
                    text: "Deep Learning is not pizza."
      security:
        - bearerAuth: []

  /tokenize:
     post:
       summary: Tokenize
       description: Generates tokens for a string using a model's tokenizer.
       requestBody:
         content:
           application/json:
             schema:
               required:
                 - model
                 - input
               type: object
               properties:
                 model:
                   type: string
                   description: The name of the model to use for tokenization.
                 input:
                   type: string
                   description: The text to tokenize.
             examples:
               basic:
                 summary: A basic example of using the API.
                 value:
                   model: "{{TEXT_MODEL}}"
                   input: "Tell me a joke."
       responses:
         "403":
           description: Failed auth response.
           content:
             application/json:
               schema:
                 type: object
                 properties:
                   error:
                     type: string
                     description: Description of the error.
               example:
                 error: "api understands the request but refuses to authorize it"
         "400":
           description: General error response.
           content:
             application/json:
               schema:
                 type: object
                 properties:
                   error:
                     type: string
                     description: Description of the error.
               example:
                 error: "required fields are missing"
         "200":
           description: Successful response.
           content:
             application/json:
               schema:
                 type: object
                 properties:
                   id:
                     type: string
                     description: Unique ID for the token.
                   object:
                     type: string
                     description: Type of object (tokens).
                   created:
                     type: integer
                     description: Timestamp of when the tokens were generated.
                   model:
                     type: string
                     description: The name of the model used.
                   tokens:
                     type: array
                     description: An array of token data.
                     items:
                       type: object
                       properties:
                         id:
                           type: integer
                           description: The converted token.
                         start:
                           type: integer
                           description: The index the token starts at.
                         stop:
                           type: integer
                           description: The index the token ends at.
                         text:
                           type: string
                           description: The token as text.
               example:
                 id: "token-ab046fcf-945f-421c-b9f0-1c75ff355203"
                 object: "tokens"
                 created: 1729871708
                 model: "{{TEXT_MODEL}}"
                 tokens:
                   - id: 1
                     start: 0
                     stop: 0
                     text: ""
                   - id: 851
                     start: 0
                     stop: 4
                     text: "This"
                   - id: 349
                     start: 4
                     stop: 7
                     text: " is"
                   - id: 264
                     start: 7
                     stop: 9
                     text: " a"
                   - id: 6029
                     start: 9
                     stop: 15
                     text: " token"
                   - id: 653
                     start: 15
                     stop: 18
                     text: "ize"
                   - id: 2757
                     start: 18
                     stop: 26
                     text: " example"
                   - id: 28723
                     start: 26
                     stop: 27
                     text: "."
       security:
         - bearerAuth: []

  /factuality:
    post:
      summary: Factuality
      description: Check the factuality of a given text compared to a reference.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - reference
                - text
              type: object
              properties:
                reference:
                  type: string
                  description: The reference text for comparison.
                text:
                  type: string
                  description: The text to be checked for factuality.
            examples:
              basic:
                summary: A basic example of using the API.
                value:
                  reference: "The President shall receive in full for his services during the term for which he shall have been elected compensation in the aggregate amount of 400,000 a year, to be paid monthly, and in addition an expense allowance of 50,000 to assist in defraying expenses relating to or resulting from the discharge of his official duties."
                  text: "The president of the united states can take a salary of one million dollars"
      responses:
        "403":
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "api understands the request but refuses to authorize it"
        "400":
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "required fields are missing"
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the factuality check.
                  object:
                    type: string
                    description: Type of object (factuality.check).
                  created:
                    type: integer
                    description: Timestamp of when the factuality check was created.
                  checks:
                    type: array
                    description: The set of vectorized data.
                    items:
                      type: object
                      properties:
                        index:
                          type: integer
                          description: The index position in the collection.
                        score:
                          type: number
                          description: The factuality score.
              example:
                id: "fact-3262157b-1ff2-4d78-8365-c2dcac56cadd"
                object: "factuality.check"
                created: 1727891187
                checks:
                  - index: 0
                    score: 0.7879657745361328
      security:
        - bearerAuth: []

  /injection:
    post:
      summary: Injection
      description: Injection detects potential prompt injection attacks.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - prompt
                - detect
              type: object
              properties:
                prompt:
                  type: string
                  description: The prompt to check for injection attack.
                detect:
                  type: boolean
                  description: Whether to detect potential injection attacks.
            examples:
              basic:
                summary: A basic example of using the API.
                value:
                  prompt: "A short poem may be a stylistic choice or it may be that you have said what you intended to say in a more concise way."
                  detect: true
      responses:
        "403":
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "api understands the request but refuses to authorize it"
        "400":
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "required fields are missing"
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the injection check.
                  object:
                    type: string
                    description: Type of object (injection_check).
                  created:
                    type: integer
                    description: Timestamp of when the injection check was created.
                  checks:
                    type: array
                    description: The set of vectorized data.
                    items:
                      type: object
                      properties:
                        index:
                          type: integer
                          description: The index position in the collection.
                        probability:
                          type: number
                          description: The probability of a potential injection attack.
                        status:
                          type: string
                          description: The response if this choice was successful.
              example:
                id: "injection-nYb6vl44Uy6gQQ2pmBYYirGquP8vnDyj"
                object: "injection_check"
                created: 1717675539
                checks:
                  - index: 0
                    probability: 0.5
                    status: "success"
      security:
        - bearerAuth: []

  /PII:
    post:
      summary: PII
      description: Replace personal information such as names, SSNs, and emails in a given text.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - prompt
                - replace
                - replace_method
              type: object
              properties:
                prompt:
                  type: string
                  description: The prompt to check for personal information.
                replace:
                  type: boolean
                  description: Whether to replace personal information.
                replace_method:
                  type: string
                  description: The method to use (random, fake, category, mask).
            examples:
              basic:
                summary: A basic example of using the API.
                value:
                  prompt: "My email is frodo@predictionguard.com and my number is 954-123-4567."
                  replace: true
                  replace_method: "mask"
      responses:
        "403":
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "api understands the request but refuses to authorize it"
        "400":
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "required fields are missing"
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the PII check.
                  object:
                    type: string
                    description: Type of object (pii_check).
                  created:
                    type: integer
                    description: Timestamp of when the PII check was created.
                  checks:
                    type: array
                    description: The set of vectorized data.
                    items:
                      type: object
                      properties:
                        index:
                          type: integer
                          description: The index position in the collection.
                        new_prompt:
                          type: string
                          description: The new prompt with the replaced information.
                        status:
                          type: string
                          description: The response if this choice was successful.
              example:
                id: "pii-MCZ68Tol2Laj0HgoJtvS5CaSljISkWN1"
                object: "pii_check"
                created: 1717675949
                checks:
                  - index: 0
                    new_prompt: "My email is * and my number is *."
                    status: "success"
      security:
        - bearerAuth: []

  /toxicity:
    post:
      summary: Toxicity
      description: Check the toxicity of a given text.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - text
              type: object
              properties:
                text:
                  type: string
                  description: The text to check for toxicity.
            examples:
              basic:
                summary: A basic example of using the API.
                value:
                  text: "Every flight I have is late and I am very angry. I want to hurt someone."
      responses:
        "403":
          description: Failed auth response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "api understands the request but refuses to authorize it"
        "400":
          description: General error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the error.
              example:
                error: "required fields are missing"
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique ID for the toxicity check.
                  object:
                    type: string
                    description: Type of object (toxicity.check).
                  created:
                    type: integer
                    description: Timestamp of when the toxicity check was created.
                  checks:
                    type: array
                    description: The set of vectorized data.
                    items:
                      type: object
                      properties:
                        index:
                          type: integer
                          description: The index position in the collection.
                        score:
                          type: number
                          description: The toxicity score.
              example:
                id: "toxi-9ab58681-594a-4efd-b358-1933189ca7bb"
                object: "toxicity.check"
                created: 1727891256
                checks:
                  - index: 0
                    score: 0.7072361707687378
      security:
        - bearerAuth: []

  /models/{capability}:
      get:
        summary: Models
        parameters:
          - in: path
            name: capability
            schema:
              type: string
              description: Optional path variable to allow for sorting by capability. Leave blank to see all models.
              enum:
                - chat-completion
                - chat-with-image
                - completion
                - embedding
                - embedding-with-image
                - tokenize
        description: Return available models for an endpoint and relevant metadata for them.
        responses:
          "403":
            description: Failed auth response.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Description of the error.
                example:
                  error: "api understands the request but refuses to authorize it"
          "400":
            description: General error response.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Description of the error.
                example:
                  error: "required fields are missing"
          "200":
            description: Successful response.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    object:
                      type: string
                      description: Type of object (list).
                    data:
                      type: array
                      description: The available models.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: The id of the model.
                          object:
                            type: string
                            description: The object type (model).
                          created:
                            type: string
                            description: The date the model was added.
                          owned_by:
                            type: string
                            description: The name of the organization that owns the model (from huggingface).
                          description:
                            type: string
                            description: A short description of the model.
                          max_context_length:
                            type: integer
                            description: The max context length of the model.
                          prompt_format:
                            type: string
                            description: The name of the prompt format (if any) the model uses.
                          capabilities:
                            type: object
                            description: The available capabilities of the model.
                            properties:
                              chat_completion:
                                type: boolean
                              chat_with_image:
                                type: boolean
                              completion:
                                type: boolean
                              embedding:
                                type: boolean
                              embedding_with_image:
                                type: boolean
                              tokenize:
                                type: boolean
                example:
                  object: "list"
                  data:
                    - id: "Hermes-2-Pro-Llama-3-70B"
                      object: "model"
                      created: "2024-10-31T00:00:00Z"
                      owned_by: "Meta"
                      description: "The Hermes 3 Llama 3.1 70B multilingual large language model (LLM) is an instruction tuned generative model."
                      max_context_length: 20480
                      prompt_format: "none"
                      capabilities:
                        chat_completion: true
                        chat_with_image: false
                        completion: true
                        embedding: false
                        embedding_with_image: false
                        tokenize: true
                        rerank: false
        security:
          - bearerAuth: [ ]

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      in: header
  schemas:
